Description: This template will an OpenSearch Demo with SNSTopic and other parts required for alerting

Parameters:
  Email:
    Type: String
    Description: 'Email to send alerts to'
  OpenSearchClusterName:
    Type: String
    Description: 'Name of OpenSearch domain'
  NumberOfNodesInCluster:
    Type: Number
    Description: 'Number of nodes in OpenSearch domain'
  IsOldGenInstancesMasterNode:
    Type: String
    Description: Are the master nodes previous generation instances? Select true if they are previous generation instances. Select false if they are current generation instances
    AllowedValues:
      - true
      - false
  IsOldGenInstancesDataNode:
    Type: String
    Description: Are the data nodes previous generation instances? Select true if they are previous generation instances. Select false if they are current generation instances
    AllowedValues:
      - true
      - false
    
Conditions:
  OldGenInstancesMasterNode: !Equals [!Ref IsOldGenInstancesMasterNode, true]
  OldGenInstancesDataNode: !Equals [!Ref IsOldGenInstancesDataNode, true]

Resources:
  # -----------------
  # SNS Topic
  # ----------------- 
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: 'os-alert-topic'
      FifoTopic: False
      TopicName: 'os-alert-topic'

  # -----------------
  # SNS Subscription
  # -----------------
  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref SNSTopic
      Protocol: 'email'
      Endpoint:
        Ref: Email

  # -----------------
  # CloudWatch Alarm - ClusterStatus.red
  # -----------------
  ClusterStatusRed:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ClusterStatus.red >= 1'
      AlarmDescription: 'Email when ClusterStatus.red >=1, 1 time within 1 minutes'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'ClusterStatus.red'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - ClusterStatus.yellow
  # -----------------
  ClusterStatusYellow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ClusterStatus.yellow >= 1'
      AlarmDescription: 'ClusterStatus.yellow maximum is >= 1 for 1 minute, 5 consecutive times'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'ClusterStatus.yellow'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 1
      Period: 60
      EvaluationPeriods: 5
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - FreeStorageSpace
  # -----------------
  FreeStorageSpace:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'FreeStorageSpace <= 20480'
      AlarmDescription: 'Email when FreeStorageSpace <= 20480, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Minimum
      MetricName: 'FreeStorageSpace'
      ComparisonOperator: LessThanOrEqualToThreshold   
      Threshold: 20480
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - ClusterIndexWritesBlocked
  # -----------------
  ClusterIndexWritesBlocked:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ClusterIndexWritesBlocked >= 1'
      AlarmDescription: 'Email when ClusterIndexWritesBlocked >=1, 1 time within 5 minutes'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'ClusterIndexWritesBlocked'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 1
      Period: 300
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - AutomatedSnapshotFailure
  # -----------------
  AutomatedSnapshotFailure:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'AutomatedSnapshotFailure >= 1'
      AlarmDescription: 'Email when AutomatedSnapshotFailure >=1, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'AutomatedSnapshotFailure'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - CPUUtilization
  # -----------------
  CPUUtilization:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'CPUUtilization >= 80'
      AlarmDescription: 'Email when CPUUtilization >=80, 3 time within 15 minutes'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'CPUUtilization'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 80
      Period: 900
      EvaluationPeriods: 3
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - JVMMemoryPressure
  # -----------------
  JVMMemoryPressure:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'JVMMemoryPressure >= 80 (old gen instance) / 95 (current gen instance)'
      AlarmDescription: 'Email when JVMMemoryPressure >= 80 (old gen instance) / 95 (current gen instance), 3 time within 5 minutes'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'JVMMemoryPressure'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: !If [OldGenInstancesDataNode, 80, 95]
      Period: 60
      EvaluationPeriods: 3
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - MasterCPUUtilization
  # -----------------
  MasterCPUUtilization:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'MasterCPUUtilization >= 50'
      AlarmDescription: 'Email when MasterCPUUtilization >= 50, 3 time within 15 minutes'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'MasterCPUUtilization'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 50
      Period: 900
      EvaluationPeriods: 3
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - MasterJVMMemoryPressure
  # -----------------
  MasterJVMMemoryPressure:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'MasterJVMMemoryPressure >= 80 (old gen instance) / 95 (current gen instance)'
      AlarmDescription: 'Email when MasterJVMMemoryPressure >= 80 (old gen instance) / 95 (current gen instance), 1 time within 15 minutes'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'MasterJVMMemoryPressure'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: !If [OldGenInstancesMasterNode, 80, 95]
      Period: 60
      EvaluationPeriods: 3
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - KMSKeyError
  # -----------------
  KMSKeyError:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'KMSKeyError >= 1'
      AlarmDescription: 'Email when KMSKeyError >= 1, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'KMSKeyError'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - KMSKeyInaccessible
  # -----------------
  KMSKeyInaccessible:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'KMSKeyInaccessible >= 1'
      AlarmDescription: 'Email when KMSKeyInaccessible >= 1, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'KMSKeyInaccessible'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - Shards.active
  # -----------------
  ShardsActive:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ShardsActive >= 30000'
      AlarmDescription: 'Email when ShardsActive >= 30000, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'Shards.active'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 30000
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - MasterReachableFromNode
  # -----------------
  MasterReachableFromNode:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'MasterReachableFromNode < 1'
      AlarmDescription: 'Email when MasterReachableFromNode < 1, 1 time within 1 day'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'MasterReachableFromNode'
      ComparisonOperator: LessThanThreshold   
      Threshold: 1
      Period: 86400
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - ThreadpoolWriteQueue
  # -----------------
  ThreadpoolWriteQueue:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ThreadpoolWriteQueue average >= 100'
      AlarmDescription: 'Email when average ThreadpoolWriteQueue >= 100, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Average
      MetricName: 'ThreadpoolWriteQueue'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 100
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - ThreadpoolSearchQueue
  # -----------------
  ThreadpoolSearchQueue500:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ThreadpoolSearchQueue average >= 500'
      AlarmDescription: 'Email when average ThreadpoolSearchQueue >= 500, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Average
      MetricName: 'ThreadpoolSearchQueue'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 500
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic

  # -----------------
  # CloudWatch Alarm - ThreadpoolSearchQueue
  # -----------------
  ThreadpoolSearchQueue5000:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'ThreadpoolSearchQueue >= 5000'
      AlarmDescription: 'Email when ThreadpoolSearchQueue >= 5000, 1 time within 1 minute'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Maximum
      MetricName: 'ThreadpoolSearchQueue'
      ComparisonOperator: GreaterThanOrEqualToThreshold   
      Threshold: 5000
      Period: 60
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic
        
  # -----------------
  # CloudWatch Alarm - ThreadpoolWriteRejected
  # -----------------
  ThreadpoolWriteRejected:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 'DIFF(ThreadpoolWriteRejected) >= 1'
      Metrics:
        # Calculate the difference in threadpoolWriteRejected minute to minute
        - Expression: 'DIFF(threadpoolWriteRejected)'
          Id: 'dIFF_threadpoolWriteRejected'
          Label: 'Difference in ThreadpoolWriteRejected'
          ReturnData: true
        # Get the SUM of the COUNT of ThreadpoolWriteRejected for each minute
        - Id: 'threadpoolWriteRejected'
          Label: 'ThreadpoolWriteRejected'
          MetricStat:
            Metric:
              Dimensions:
                - Name: ClientId
                  Value: !Ref AWS::AccountId
                - Name: DomainName
                  Value: 
                    Ref: OpenSearchClusterName
              MetricName: 'ThreadpoolWriteRejected'
              Namespace: 'AWS/ES'
            Period: 60
            Stat: 'Sum'
            Unit: 'Count'
          ReturnData: false
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic
        
  # -----------------
  # CloudWatch Alarm - ThreadpoolSearchRejected 
  # -----------------
  ThreadpoolSearchRejected:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 'DIFF(ThreadpoolSearchRejected) >= 1'
      Metrics:
        # Calculate the difference in ThreadpoolSearchRejected minute to minute
        - Expression: 'DIFF(threadpoolSearchRejected)'
          Id: 'dIFF_threadpoolSearchRejected'
          Label: 'Difference in ThreadpoolSearchRejected'
          ReturnData: true
          # Get the SUM of the COUNT of ThreadpoolSearchRejected for each minute
        - Id: 'threadpoolSearchRejected'
          Label: 'ThreadpoolSearchRejected'
          MetricStat:
            Metric:
              Dimensions:
                - Name: ClientId
                  Value: !Ref AWS::AccountId
                - Name: DomainName
                  Value: 
                    Ref: OpenSearchClusterName
              MetricName: 'ThreadpoolSearchRejected'
              Namespace: 'AWS/ES'
            Period: 60
            Stat: 'Sum'
            Unit: 'Count'
          ReturnData: false
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic
    
  # -----------------
  # CloudWatch Alarm - Nodes  
  # -----------------
  Nodes:
    Type: AWS::CloudWatch::Alarm
    Properties:
      # Alarm name + description
      AlarmName: 'Nodes < NumberOfNodesInCluster, 1 time within 1 day'
      AlarmDescription: 'Email when Nodes < NumberOfNodesInCluster (the number of nodes that are supposed to be in the cluster), 1 time within 1 day'
      # Account + cluster
      Namespace: 'AWS/ES'
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: 
            Ref: OpenSearchClusterName
      # Conditions
      Statistic: Minimum
      MetricName: 'Nodes'
      ComparisonOperator: LessThanThreshold   
      Threshold: 
        Ref: NumberOfNodesInCluster
      Period: 86400
      EvaluationPeriods: 1
      # Action
      OKActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic
